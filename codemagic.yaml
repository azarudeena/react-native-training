# Check out https://docs.codemagic.io/yaml/building-a-react-native-app/ for more information
# Please review and update values in curly braces

workflows:
    react-native-android:
        name: React Native Android
        max_build_duration: 120
        environment:
            vars:
                # https://firebase.google.com/docs/cli#cli-ci-systems
                FIREBASE_TOKEN: Encrypted(...) # <-- Put your encrypted Firebase App Distribution CI token here
                CM_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
                CM_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
                CM_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
                CM_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here
            
            node: latest
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Set Android SDK location
              script: |
                echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
            - name: Set up keystore
              script: |
                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
                    storePassword=$CM_KEYSTORE_PASSWORD
                    keyPassword=$CM_KEY_ALIAS_PASSWORD
                    keyAlias=$CM_KEY_ALIAS_USERNAME
                    storeFile=/tmp/keystore.keystore
                    EOF
            - name: Build Android release
              script: |
                # build Android
                cd android
                ./gradlew assembleRelease
            - name: Firebase App Distribution
              script: |
                # https://firebase.google.com/docs/app-distribution/android/distribute-cli
                #!/usr/bin/env sh
                set -e   # exit on first failed command
                set -x   # print all executed commands to the log
                
                # Android Firebase App Distribution CLI
                # Change the --app value below!!

                firebase appdistribution:distribute $FCI_BUILD_DIR/android/app/build/outputs/apk/release/app-release.apk \
                --app 1:831201993789:android:b9039e5b4d34d88754f271 \ 
                --token "$FIREBASE_TOKEN" \
                --release-notes "Internal Android test release" \
                --groups "cmrnapp-testers"
        artifacts:
            - android/app/build/outputs/**/*.apk
        publishing:
            email:
                recipients:
                    - user@example.io
    react-native-ios:
        name: React Native iOS
        max_build_duration: 120
        instance_type: mac_pro
        environment:
            vars:
                FIREBASE_TOKEN: Encrypted(...) # <-- Put your encrypted Firebase App Distribution CI token here
                XCODE_WORKSPACE: "codemagicreactnative.xcworkspace" # <-- Put the name of your Xcode workspace here
                XCODE_SCHEME: "codemagicreactnative" # <-- Put the name of your Xcode scheme here
                # Manual Code Signing
                # CM_CERTIFICATE: Encrypted(...) # <-- Put your encrypted certificate file here
                # CM_CERTIFICATE_PASSWORD: Encrypted(...) # <-- Put your encrypted certificate password here
                # CM_PROVISIONING_PROFILE: Encrypted(...) # <-- Put your encrypted provisioning profile here
                #
                # Automatic Code Signing 
                # https://docs.codemagic.io/yaml/distribution/
                # https://appstoreconnect.apple.com/access/api
                APP_STORE_CONNECT_ISSUER_ID: 5a451239-51eb-10b6-bfcc-60e61ddab13c # <-- Put your App Store Connect Issuer Id here
                APP_STORE_CONNECT_KEY_IDENTIFIER: LY55E1G322 # <-- Put your App Store Connect Key Identifier here
                APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your App Store Connect Private Key here
                CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your Certificate Private key here
            node: latest
            xcode: latest
            cocoapods: default
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Install CocoaPods dependencies
              script: |
                cd ios && pod install
            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
              script: |
                keychain initialize
            # - name: Set up Provisioning profiles from environment variables (Use with manual code signing)
            #   script: |
            #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
            #     mkdir -p "$PROFILES_HOME"
            #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
            #     echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
            #     echo "Saved provisioning profile $PROFILE_PATH"
            - name: 
              script: |
                # For information about Codemagic CLI commands visit: https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md
                # app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) --type IOS_APP_STORE --create
                app-store-connect fetch-signing-files "com.codemagicreactnative" --type IOS_APP_ADHOC --create
            # - name: Set up signing certificate (Use with manual code signing)
            #   script: |
            #     echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
            #     keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
            - name: Use system default keychain
              script: |
                keychain add-certificates
            - name: Increment build number
              script: |
                #!/bin/sh
                set -e
                set -x
                cd $FCI_BUILD_DIR/ios
                agvtool new-version -all $(($BUILD_NUMBER + 1))
            - name: Set up code signing settings on Xcode project
              script: |
                xcode-project use-profiles
            - name: Build ipa for distribution
              script: |
                xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
            - name: Firebase App Distribution
              script: |
                #!/usr/bin/env sh
                set -e   # exit on first failed command
                set -x   # print all executed commands to the log
                
                # iOS Firebase App Distribution CLI
                # Change the --app value below!!

                firebase appdistribution:distribute $FCI_BUILD_DIR/build/ios/ipa/codemagicreactnative.ipa \
                --app 1:830101873788:ios:05df72817d62e45253f229 \
                --token "$FIREBASE_TOKEN" \
                --release-notes "Internal iOS test release" \
                --groups "cmrnapp-testers"   
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM

        # publishing:
        #   app_store_connect:                 
        #       apple_id: yourAppleId@example.com  
        #       password: Encrypted(...) # <-- Put your App Specific Password. For more information visit: https://support.apple.com/en-us/HT204397
    
